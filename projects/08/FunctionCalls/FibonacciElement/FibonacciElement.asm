@256
D=A 
@SP 
M=D 
@Sys.init0
D=A   
@R13  
M=D   
@return_address0 
D=A  
(_CALL_PUSH_SEG)
@SP  
A=M  
M=D  
@SP  
M=M+1
@LCL 
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@ARG 
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@THIS 
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@THAT 
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@SP  
D=M  
@5   
D=D-A
@R13 
A=M  
0;JMP
(Sys.init0)
@0 
D=D-A
@ARG 
M=D  
@SP 
D=M 
@LCL
M=D 
@Sys.init 
0;JMP
(return_address0)

//Main.vm
//writeFunction Main.fibonacci
(Main.fibonacci)
@0 
D=A  
@R13 
M=D  
(Main.fibonacci_push_local)
@R13    
D=M     
@Main.fibonacci_push_end
D;JEQ   
@0      
D=A     
@SP     
A=M     
M=D     
@SP     
M=M+1   
@R13    
M=M-1   
@Main.fibonacci_push_local
0;JMP   
(Main.fibonacci_push_end)
@ARG
D=M
@0
A=D+A
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@2
D=A
@SP   
A=M   
M=D   
@SP   
M=M+1 
@LT_RETURN_0
D=A   
@R13  
M=D   
(_fadff_LT)
@SP        
AM=M-1     
D=M        
@SP        
A=M-1      
D=M-D      
@TRUE_LT  
D;JLT     
(FALSE_LT)
@SP        
A=M-1      
M=0        
@EXIT_LT  
0;JMP      
(TRUE_LT) 
@SP        
A=M-1      
M=-1       
(EXIT_LT) 
@R13 
A=M  
0;JMP
(LT_RETURN_0)
@SP   
AM=M-1
D=M   
@Main.fibonacci$IF_TRUE  
D;JNE 
@Main.fibonacci$IF_FALSE 
0;JMP
(Main.fibonacci$IF_TRUE)
@ARG
D=M
@0
A=D+A
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
//writeReturn
(RETURN)
@LCL  
D=M   
@R13  
M=D   
@5    
A=D-A 
D=M   
@R14  
M=D   
@SP   
A=M-1 
D=M   
@ARG  
A=M   
M=D   
@ARG  
D=M   
@SP   
M=D+1 
@R13  
AM=M-1
D=M   
@THAT 
M=D   
@R13  
AM=M-1
D=M   
@THIS 
M=D   
@R13  
AM=M-1
D=M   
@ARG 
M=D   
@R13  
AM=M-1
D=M   
@LCL 
M=D   
@R14  
A=M   
0;JMP 
(Main.fibonacci$IF_FALSE)
@ARG
D=M
@0
A=D+A
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@2
D=A
@SP   
A=M   
M=D   
@SP   
M=M+1 
@SP   
AM=M-1
D=M   
@SP   
A=M-1 
M=M-D
@Main.fibonacci0
D=A   
@R13  
M=D   
@return_address1 
D=A  
@_CALL_PUSH_SEG
0;JMP
(Main.fibonacci0)
@1 
D=D-A
@ARG 
M=D  
@SP 
D=M 
@LCL
M=D 
@Main.fibonacci 
0;JMP
(return_address1)
@ARG
D=M
@0
A=D+A
D=M  
@SP  
A=M  
M=D  
@SP  
M=M+1
@1
D=A
@SP   
A=M   
M=D   
@SP   
M=M+1 
@SP   
AM=M-1
D=M   
@SP   
A=M-1 
M=M-D
@Main.fibonacci0
D=A   
@R13  
M=D   
@return_address2 
D=A  
@_CALL_PUSH_SEG
0;JMP
(Main.fibonacci0)
@1 
D=D-A
@ARG 
M=D  
@SP 
D=M 
@LCL
M=D 
@Main.fibonacci 
0;JMP
(return_address2)
@SP   
AM=M-1
D=M   
@SP   
A=M-1 
M=D+M
@RETURN
0;JMP

//Sys.vm
//writeFunction Sys.init
(Sys.init)
@0 
D=A  
@R13 
M=D  
(Sys.init_push_local)
@R13    
D=M     
@Sys.init_push_end
D;JEQ   
@0      
D=A     
@SP     
A=M     
M=D     
@SP     
M=M+1   
@R13    
M=M-1   
@Sys.init_push_local
0;JMP   
(Sys.init_push_end)
@4
D=A
@SP   
A=M   
M=D   
@SP   
M=M+1 
@Main.fibonacci0
D=A   
@R13  
M=D   
@return_address3 
D=A  
@_CALL_PUSH_SEG
0;JMP
(Main.fibonacci0)
@1 
D=D-A
@ARG 
M=D  
@SP 
D=M 
@LCL
M=D 
@Main.fibonacci 
0;JMP
(return_address3)
(Sys.init$WHILE)
@Sys.init$WHILE 
0;JMP
